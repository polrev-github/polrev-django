volumes:
  db:
  redis:

networks:
  polrev:
    driver: bridge

services:
  # Django
  web:
    build:
      context: ./polrev
    user: "${UID}:${GID}"
    depends_on:
      - db
      - redis
    environment:
      - IN_DOCKER=true
    hostname: django.${POLREV_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.middlewares=test-compress"
      - "traefik.http.middlewares.test-compress.compress=true"

    ports:
      - 8000:8000
    networks:
      - polrev
    volumes:
      - "./polrev:/app"

  celery:
    build:
      context: ./polrev
    user: "${UID}:${GID}"
    command: celery -A polrev worker -l info
    entrypoint: ./celery-entrypoint.sh
    volumes:
      - "./polrev:/app"
    environment:
      - IN_DOCKER=true
    depends_on:
      - db
      - redis
    networks:
      - polrev

  celery-beat:
    build:
      context: ./polrev
    user: "${UID}:${GID}"
    command: celery -A polrev beat -l info
    entrypoint: ./celery-entrypoint.sh
    volumes:
      - "./polrev:/app"
    environment:
      - IN_DOCKER=true
    depends_on:
      - db
      - redis
    networks:
      - polrev

  # Database
  db:
    image: postgres:15.10
    environment:
      - PGDATA=/pg-data
    ports:
      - 5432:5432
    volumes:
      - db:/pg-data
    networks:
      - polrev

  # Redis
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - redis:/bitnami/redis/data
    networks:
      - polrev

  # Traffic
  traefik:
    image: "traefik:v2.5.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=kurtis@pol-rev.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"

    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - polrev
