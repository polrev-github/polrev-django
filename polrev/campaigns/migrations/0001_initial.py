# Generated by Django 3.2.13 on 2022-04-30 08:18

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtailmarkdown.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parties', '0001_initial'),
        ('offices', '0001_initial'),
        ('areas', '0001_initial'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0066_collection_management_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CampaignPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('state_fips', models.CharField(choices=[('01', 'Alabama'), ('02', 'Alaska'), ('04', 'Arizona'), ('05', 'Arkansas'), ('06', 'California'), ('08', 'Colorado'), ('09', 'Connecticut'), ('10', 'Delaware'), ('12', 'Florida'), ('13', 'Georgia'), ('15', 'Hawaii'), ('16', 'Idaho'), ('17', 'Illinois'), ('18', 'Indiana'), ('19', 'Iowa'), ('20', 'Kansas'), ('21', 'Kentucky'), ('22', 'Louisiana'), ('23', 'Maine'), ('24', 'Maryland'), ('25', 'Massachusetts'), ('26', 'Michigan'), ('27', 'Minnesota'), ('28', 'Mississippi'), ('29', 'Missouri'), ('30', 'Montana'), ('31', 'Nebraska'), ('32', 'Nevada'), ('33', 'New Hampshire'), ('34', 'New Jersey'), ('35', 'New Mexico'), ('36', 'New York'), ('37', 'North Carolina'), ('38', 'North Dakota'), ('39', 'Ohio'), ('40', 'Oklahoma'), ('41', 'Oregon'), ('42', 'Pennsylvania'), ('44', 'Rhode Island'), ('45', 'South Carolina'), ('46', 'South Dakota'), ('47', 'Tennessee'), ('48', 'Texas'), ('49', 'Utah'), ('50', 'Vermont'), ('51', 'Virginia'), ('53', 'Washington'), ('54', 'West Virginia'), ('55', 'Wisconsin'), ('56', 'Wyoming'), ('60', 'American Samoa'), ('66', 'Guam'), ('69', 'Northern Mariana Islands'), ('72', 'Puerto Rico'), ('78', 'Virgin Islands'), ('11', 'District of Columbia'), (None, 'Philippine Islands')], default='00', help_text='Example: 01, 02 ... 50', max_length=2, verbose_name='State FIPS')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Election date')),
                ('body', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(icon='code')), ('embed', wagtail.embeds.blocks.EmbedBlock(max_height=400, max_width=800))], blank=True)),
                ('excerpt', wagtail.core.fields.RichTextField(blank=True, help_text='Entry excerpt to be displayed on entries list. If this field is not filled, a truncated version of body text will be used.', verbose_name='excerpt')),
                ('incumbent', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('facebook', models.URLField(blank=True, verbose_name='facebook')),
                ('twitter', models.URLField(blank=True, verbose_name='twitter')),
                ('instagram', models.URLField(blank=True, verbose_name='instagram')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('donate', models.URLField(blank=True, verbose_name='donate')),
                ('ballotpedia', models.URLField(blank=True, verbose_name='ballotpedia')),
                ('wikipedia', models.URLField(blank=True, verbose_name='wikipedia')),
                ('area_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='areas.area')),
                ('endorsements', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='endorsed_campaigns', to='parties.Party')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
                ('office_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='offices.office')),
                ('office_type_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='offices.officetype', verbose_name='office type')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CampaignsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(icon='code')), ('embed', wagtail.embeds.blocks.EmbedBlock(max_height=400, max_width=800))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='YearPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(icon='code')), ('embed', wagtail.embeds.blocks.EmbedBlock(max_height=400, max_width=800))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='FederalCampaignPage',
            fields=[
                ('campaignpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.campaignpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('campaigns.campaignpage',),
        ),
        migrations.CreateModel(
            name='StateCampaignPageBase',
            fields=[
                ('campaignpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.campaignpage')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='state_campaigns', to='areas.state', verbose_name='state')),
            ],
            options={
                'abstract': False,
            },
            bases=('campaigns.campaignpage',),
        ),
        migrations.CreateModel(
            name='UsSenateCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('us_senate_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='us_senate_campaigns', to='offices.ussenateoffice', verbose_name='office')),
            ],
            options={
                'verbose_name': 'U.S. Senate Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
        migrations.CreateModel(
            name='UsHouseCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('district_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='us_house_campaigns', to='areas.congressionaldistrict', verbose_name='district')),
                ('us_house_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='us_house_campaigns', to='offices.ushouseoffice', verbose_name='office')),
            ],
            options={
                'verbose_name': 'U.S. House Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
        migrations.CreateModel(
            name='StateSenateCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('district_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='state_senate_campaigns', to='areas.statesenatedistrict', verbose_name='district')),
                ('state_senate_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='state_senate_campaigns', to='offices.statesenateoffice', verbose_name='office')),
            ],
            options={
                'verbose_name': 'State Senate Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
        migrations.CreateModel(
            name='StateHouseCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('district_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='state_house_campaigns', to='areas.statehousedistrict')),
                ('state_house_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='state_house_campaigns', to='offices.statehouseoffice', verbose_name='office')),
            ],
            options={
                'verbose_name': 'State House Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
        migrations.CreateModel(
            name='StateCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('state_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='state_campaigns', to='offices.stateofficebase', verbose_name='office')),
            ],
            options={
                'verbose_name': 'State Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
        migrations.CreateModel(
            name='SchoolDistrictCampaignPage',
            fields=[
                ('statecampaignpagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='campaigns.statecampaignpagebase')),
                ('district_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='school_district_campaigns', to='areas.schooldistrict')),
                ('school_district_office_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='school_district_campaigns', to='offices.schooldistrictoffice', verbose_name='office')),
            ],
            options={
                'verbose_name': 'School District Campaign',
            },
            bases=('campaigns.statecampaignpagebase',),
        ),
    ]
