# Generated by Django 3.2.13 on 2022-04-17 22:59

from django.db import migrations, models
import django.db.models.deletion
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Congressional District'), (2, 'State Senate District'), (3, 'State House District'), (4, 'County'), (5, 'City'), (6, 'Town'), (7, 'Village'), (8, 'Township'), (9, 'Charter Township'), (10, 'Borough'), (11, 'City and Borough'), (12, 'Unified Government'), (13, 'Consolidate Government'), (14, 'Metropolitan Government'), (15, 'Urban County'), (16, 'City and County'), (17, 'Municipality'), (18, 'Corporation'), (19, 'Plantation'), (22, 'Unified School District'), (23, 'Elementary School District'), (24, 'Secondary School District')], default=0)),
                ('title', models.CharField(help_text='Example: Mobile, Alabama', max_length=256, verbose_name='title')),
                ('name', models.CharField(help_text='Example: United States, Alabama, Mobile', max_length=128, verbose_name='name')),
                ('state_fips', models.CharField(default='00', help_text='Example: 01, 02 ... 50', max_length=2, verbose_name='State FIPS Code')),
                ('gnis_feature_id', models.CharField(blank=True, help_text='Example: 01779775', max_length=8, verbose_name='GNIS Feature Id')),
            ],
            options={
                'ordering': ['title'],
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('county_fips', models.CharField(help_text='Example: 001, 002 ...', max_length=3, verbose_name='County FIPS Code')),
                ('class_fips', models.CharField(help_text='Example: H1, H4 ...', max_length=2, verbose_name='County Class FIPS Code')),
            ],
            options={
                'verbose_name_plural': 'counties',
            },
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='LegislativeDistrict',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('district_num', models.PositiveSmallIntegerField()),
                ('seats', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ['district_num'],
            },
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('state_usps', models.CharField(help_text='Example: AL, AK ... WY', max_length=2, verbose_name='State USPS Code')),
            ],
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='SchoolDistrict',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('lea_code', models.CharField(help_text='Example: 00123', max_length=5, verbose_name='LEA Code')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='school_districts', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('place_fips', models.CharField(help_text='Example: 00123', max_length=5, verbose_name='Place FIPS Code')),
                ('counties', models.ManyToManyField(to='areas.County')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='places', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='LocalCouncilDistrict',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('place_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='local_council_districts', to='areas.place', verbose_name='Place')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='local_council_districts', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='CountyCouncilDistrict',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('county_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='county_council_districts', to='areas.county', verbose_name='County')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='county_council_districts', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.area',),
        ),
        migrations.AddField(
            model_name='county',
            name='state_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counties', to='areas.state', verbose_name='State'),
        ),
        migrations.CreateModel(
            name='CongressionalDistrict',
            fields=[
                ('area_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.area')),
                ('cd_fips', models.CharField(help_text='Example: 01 ... 99', max_length=2, verbose_name='Congressional District Code')),
                ('cd_num', models.PositiveSmallIntegerField()),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='congressional_districts', to='areas.state', verbose_name='State')),
            ],
            options={
                'ordering': ['cd_num'],
            },
            bases=('areas.area',),
        ),
        migrations.CreateModel(
            name='StateSenateDistrict',
            fields=[
                ('legislativedistrict_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.legislativedistrict')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='state_senate_districts', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.legislativedistrict',),
        ),
        migrations.CreateModel(
            name='StateHouseDistrict',
            fields=[
                ('legislativedistrict_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='areas.legislativedistrict')),
                ('state_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='state_house_districts', to='areas.state', verbose_name='State')),
            ],
            bases=('areas.legislativedistrict',),
        ),
    ]
